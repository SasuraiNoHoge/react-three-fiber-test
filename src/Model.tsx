/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import React, { useRef } from "react";
import { useLoader } from "react-three-fiber";
import * as THREE from "three";
import { GLTF, GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
const model = require("../public/model2.glb");

type GLTFResult = GLTF & {
  nodes: {
    nail: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useLoader<GLTFResult>(GLTFLoader, model);
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        material={materials["Material.001"]}
        geometry={nodes.nail.geometry}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh />
    </group>
  );
}
